#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>   // Для других систем библиотека alloc.h или другая 
#include <locale.h>
#include <string.h>
#include <conio.h>
#include <Windows.h>
#define m 100  // Длина массива для исходной строки 
int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	puts("Поиск слов в тексте, начинающихся с символов, указанных отдельной строкой.");
	puts("Программа написана со стандартными функциями");
	do {
		char* s,                // s - исходная строка
			* str[m];       // str - массив указателей на отдельные слова в строке s ; 
		int n, i, j;               // n - количество слов, i,j - индексы 
		char s2[m]; // массив символов, с которых должны начинаться слова
		char c;
		int count = 0;
		//Выделение памяти и ввод исходной строки
		s = (char*)calloc(m, sizeof(char));
		do {
			do {
				puts("\nВведите текст (символы-разделители слов:,. ?!-;:):");
				scanf("%[^\n]", s);
				while (getchar() != '\n');
			} while (s[0] == NULL); //Зациклить ввод, чтобы не ввели пустую строку 
			puts("\nВы ввели текст:");
			puts(s);
			str[0] = strtok(s, ",. ?!-;:");
		} while (str[0] == NULL); //Зациклить ввод строки, чтобы не была введена строка из одних разделителей

		do {
			do {
				puts("\nВведите символы, с которых должны начинаться слова в тексте:");
				scanf("%[^\n]", s2);
				while (getchar() != '\n');
			} while (s2[0] == NULL); //Зациклить ввод, чтобы не ввели пустую строку 
			puts("\nВы ввели символы:");
			puts(s2);
		} while (strlen(s2) != (strcspn(s2, ",. ?!-;:")));
		
		//Формирование массива указателей слов
		for (i = 1; str[i] = strtok(NULL, ",. ?!-;:"); i++);
		n = i;    // n – количество слов
		puts("\nСлова из текста, которые попали в массив указателей:");
		for (i = 0; i < n; i++) printf("%s ", str[i]); //вместо str[i] можно писать *(str+i) 
		//Слова, начинающиеся с символов указанных в строке s2
		puts("\n\nСписок слов из текста, начинающихся на заданные символы:");
		for (i = 0; i < n; i++)
			if (*(str + i) == (strpbrk(*(str + i), s2))) {
				printf("%s ", str[i]);
				count += 1;
			}
		if (count == 0) {
			printf("В тексте подходящих слов не найдено\n");
		}
		free(s);
		puts("\n\nНажмите любую клавишу для продолжения и Esc для окончания работы программы\n");
	} while (_getch() != '27');
}